//we all are lost trying to be someone
#include<bits/stdc++.h>
#define pb push_back
#define sz(x) int(x.size())
using namespace std;
const int MAX=1000000;
bool prim[60];
int n;
void criba(){
    prim[0]=true;
    prim[1]=true;
    for(int i=2; i<60; i++){
        if(!prim[i]){
            for(int j=i*2; j<60; j+=i){
                prim[j]=true;
            }
        }
    }
}
void looks(vector<int> s){
    if(sz(s) == n and !prim[s.back() + 1]){
        for(int x:s)cout<<x<<' ';
        cout<<'\n';
        return;
    }
    if(sz(s) == n)return;
    bool exist[20];
    for(int x:s) exist[x]=true;
    if(sz(s)%2){//toca par
        for(int i=2; i<=n; i+=2){
            if( !exist[i] and !prim[s.back() + i]){
                s.pb(i);
                looks(s);
                s.pop_back();
            }
        }
    }
    else{//toca impar
        for(int i=3; i<=n; i+=2){
            if( !exist[i] and !prim[s.back() + i]){
                s.pb(i);
                looks(s);
                s.pop_back();
            }
        }
    }
    
}
void solve(int t){
    cout<<"Case "<<t<<':'<<'\n';
    vector<int> c;
    c.pb(1);
    looks(c);
}
int main(){
    criba();
    int t=0;
    while(cin>>n)t++,solve(t);
    return 0;
}
